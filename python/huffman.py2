"""
Author: Phillip Stewart
Date: 25 March 2016
CodeEval Challenge: 234 - Huffman Coding
"""

import sys


def make_tree(letters):
	d = {}
	for letter in letters:
		if letter in d:
			d[letter] += 1
		else:
			d[letter] = 1
	nodes = []
	for k, v in d.iteritems():
		nodes.append([v, k])
	while len(nodes) > 1:
		nodes = sorted(nodes)#, key=lambda x:x[0])
		left = nodes[0]
		right = nodes[1]
		remaining = nodes[2:]
		new_tree = [left[0] + right[0], [left, right]]
		nodes = [new_tree] + remaining
	new_tree = fix(nodes[0])
	return new_tree


def fix(branch):
	if type(branch[1]) == str:
		return branch[1]
	else:
		return [fix(branch[1][0]), fix(branch[1][1])]


def mark(branch, prefix=''):
	if type(branch) == str:
		return {branch: prefix}
	else:
		left = mark(branch[0], prefix + '0')
		right = mark(branch[1], prefix + '1')
		left.update(right)
		return left


def make_coding(tree):
	d = mark(tree)
	coding = []
	keys = sorted(d.keys())
	for k in keys:
		coding.append((k, d[k]))
	return coding


def main(args):
	if len(args) != 2:
		print 'Usage ~$ ' + args[0] + ' <input file>'
		sys.exit(0)
	else:
		filename = args[1]

	with open(filename, 'r') as f:
		for line in f:
			letters = list(line.strip())
			tree = make_tree(letters)
			coding = make_coding(tree)
			print '; '.join(['{}: {}'.format(k, v) for k, v in coding]) + ';'


if __name__ == "__main__":
	main(sys.argv)
