"""
Author: Phillip Stewart
Date: 30 March 2016
CodeEval Challenge: 151 - Cracking Eggs
"""

import sys

# Even with a huge precalculated cache, this blows the stack pretty easily.
class memoized(object):
	def __init__(self, func):
		self.func = func
		self.cache = {(5,100):7,(3,1000):19,(11,120):7,(5,1023):11,(6,2500):12,(9,1000):10,(7,16000):15,(8,7000):13,
			(3,21):5,(3,22):5,(3,23):5,(3,24):5,(3,25):5,(3,26):6,(3,27):6,(3,28):6,(3,29):6,(3,30):6,(3,31):6,(3,32):6,(3,33):6,(3,34):6,(3,35):6,(3,36):6,(3,37):6,(3,38):6,(3,39):6,(3,40):6,
			(3,41):6,(3,42):7,(3,43):7,(3,44):7,(3,45):7,(3,46):7,(3,47):7,(3,48):7,(3,49):7,(3,50):7,(3,51):7,(3,52):7,(3,53):7,(3,54):7,(3,55):7,(3,56):7,(3,57):7,(3,58):7,(3,59):7,(3,60):7,
			(3,61):7,(3,62):7,(3,63):7,(3,64):8,(3,65):8,(3,66):8,(3,67):8,(3,68):8,(3,69):8,(3,70):8,(3,71):8,(3,72):8,(3,73):8,(3,74):8,(3,75):8,(3,76):8,(3,77):8,(3,78):8,(3,79):8,(3,80):8,
			(3,81):8,(3,82):8,(3,83):8,(3,84):8,(3,85):8,(3,86):8,(3,87):8,(3,88):8,(3,89):8,(3,90):8,(3,91):8,(3,92):8,(3,93):9,(3,94):9,(3,95):9,(3,96):9,(3,97):9,(3,98):9,(3,99):9,(3,100):9,
			(3,101):9,(3,102):9,(3,103):9,(3,104):9,(3,105):9,(3,106):9,(3,107):9,(3,108):9,(3,109):9,(3,110):9,(3,111):9,(3,112):9,(3,113):9,(3,114):9,(3,115):9,(3,116):9,(3,117):9,(3,118):9,(3,119):9,(3,120):9,
			(3,121):9,(3,122):9,(3,123):9,(3,124):9,(3,125):9,(3,126):9,(3,127):9,(3,128):9,(3,129):9,(3,130):10,(3,131):10,(3,132):10,(3,133):10,(3,134):10,(3,135):10,(3,136):10,(3,137):10,(3,138):10,(3,139):10,(3,140):10,
			(3,141):10,(3,142):10,(3,143):10,(3,144):10,(3,145):10,(3,146):10,(3,147):10,(3,148):10,(3,149):10,(3,150):10,(3,151):10,(3,152):10,(3,153):10,(3,154):10,(3,155):10,(3,156):10,(3,157):10,(3,158):10,(3,159):10,(3,160):10,
			(3,161):10,(3,162):10,(3,163):10,(3,164):10,(3,165):10,(3,166):10,(3,167):10,(3,168):10,(3,169):10,(3,170):10,(3,171):10,(3,172):10,(3,173):10,(3,174):10,(3,175):10,(3,176):11,(3,177):11,(3,178):11,(3,179):11,(3,180):11,
			(3,181):11,(3,182):11,(3,183):11,(3,184):11,(3,185):11,(3,186):11,(3,187):11,(3,188):11,(3,189):11,(3,190):11,(3,191):11,(3,192):11,(3,193):11,(3,194):11,(3,195):11,(3,196):11,(3,197):11,(3,198):11,(3,199):11,(3,200):11,
			(3,201):11,(3,202):11,(3,203):11,(3,204):11,(3,205):11,(3,206):11,(3,207):11,(3,208):11,(3,209):11,(3,210):11,(3,211):11,(3,212):11,(3,213):11,(3,214):11,(3,215):11,(3,216):11,(3,217):11,(3,218):11,(3,219):11,(3,220):11,
			(3,221):11,(3,222):11,(3,223):11,(3,224):11,(3,225):11,(3,226):11,(3,227):11,(3,228):11,(3,229):11,(3,230):11,(3,231):11,(3,232):12,(3,233):12,(3,234):12,(3,235):12,(3,236):12,(3,237):12,(3,238):12,(3,239):12,(3,240):12,
			(3,241):12,(3,242):12,(3,243):12,(3,244):12,(3,245):12,(3,246):12,(3,247):12,(3,248):12,(3,249):12,(3,250):12,(3,251):12,(3,252):12,(3,253):12,(3,254):12,(3,255):12,(3,256):12,(3,257):12,(3,258):12,(3,259):12,(3,260):12,
			(3,261):12,(3,262):12,(3,263):12,(3,264):12,(3,265):12,(3,266):12,(3,267):12,(3,268):12,(3,269):12,(3,270):12,(3,271):12,(3,272):12,(3,273):12,(3,274):12,(3,275):12,(3,276):12,(3,277):12,(3,278):12,(3,279):12,(3,280):12,
			(3,281):12,(3,282):12,(3,283):12,(3,284):12,(3,285):12,(3,286):12,(3,287):12,(3,288):12,(3,289):12,(3,290):12,(3,291):12,(3,292):12,(3,293):12,(3,294):12,(3,295):12,(3,296):12,(3,297):12,(3,298):12,(3,1000):19,(4,21):5,
			(4,22):5,(4,23):5,(4,24):5,(4,25):5,(4,26):5,(4,27):5,(4,28):5,(4,29):5,(4,30):5,(4,31):6,(4,32):6,(4,33):6,(4,34):6,(4,35):6,(4,36):6,(4,37):6,(4,38):6,(4,39):6,(4,40):6,(4,41):6,
			(4,42):6,(4,43):6,(4,44):6,(4,45):6,(4,46):6,(4,47):6,(4,48):6,(4,49):6,(4,50):6,(4,51):6,(4,52):6,(4,53):6,(4,54):6,(4,55):6,(4,56):6,(4,57):7,(4,58):7,(4,59):7,(4,60):7,(4,61):7,
			(4,62):7,(4,63):7,(4,64):7,(4,65):7,(4,66):7,(4,67):7,(4,68):7,(4,69):7,(4,70):7,(4,71):7,(4,72):7,(4,73):7,(4,74):7,(4,75):7,(4,76):7,(4,77):7,(4,78):7,(4,79):7,(4,80):7,(4,81):7,
			(4,82):7,(4,83):7,(4,84):7,(4,85):7,(4,86):7,(4,87):7,(4,88):7,(4,89):7,(4,90):7,(4,91):7,(4,92):7,(4,93):7,(4,94):7,(4,95):7,(4,96):7,(4,97):7,(4,98):7,(4,99):8,(4,100):8,(4,101):8,
			(4,102):8,(4,103):8,(4,104):8,(4,105):8,(4,106):8,(4,107):8,(4,108):8,(4,109):8,(4,110):8,(4,111):8,(4,112):8,(4,113):8,(4,114):8,(4,115):8,(4,116):8,(4,117):8,(4,118):8,(4,119):8,(4,120):8,(4,121):8,
			(4,122):8,(4,123):8,(4,124):8,(4,125):8,(4,126):8,(4,127):8,(4,128):8,(4,129):8,(4,130):8,(4,131):8,(4,132):8,(4,133):8,(4,134):8,(4,135):8,(4,136):8,(4,137):8,(4,138):8,(4,139):8,(4,140):8,(4,141):8,
			(4,142):8,(4,143):8,(4,144):8,(4,145):8,(4,146):8,(4,147):8,(4,148):8,(4,149):8,(4,150):8,(4,151):8,(4,152):8,(4,153):8,(4,154):8,(4,155):8,(4,156):8,(4,157):8,(4,158):8,(4,159):8,(4,160):8,(4,161):8,
			(4,162):8,(4,163):9,(4,164):9,(4,165):9,(4,166):9,(4,167):9,(4,168):9,(4,169):9,(4,170):9,(4,171):9,(4,172):9,(4,173):9,(4,174):9,(4,175):9,(4,176):9,(4,177):9,(4,178):9,(4,179):9,(4,180):9,(4,181):9,
			(4,182):9,(4,183):9,(4,184):9,(4,185):9,(4,186):9,(4,187):9,(4,188):9,(4,189):9,(4,190):9,(4,191):9,(4,192):9,(4,193):9,(4,194):9,(4,195):9,(4,196):9,(4,197):9,(4,198):9,(4,199):9,(4,200):9,(4,201):9,
			(4,202):9,(4,203):9,(4,204):9,(4,205):9,(4,206):9,(4,207):9,(4,208):9,(4,209):9,(4,210):9,(4,211):9,(4,212):9,(4,213):9,(4,214):9,(4,215):9,(4,216):9,(4,217):9,(4,218):9,(4,219):9,(4,220):9,(4,221):9,
			(4,222):9,(4,223):9,(4,224):9,(4,225):9,(4,226):9,(4,227):9,(4,228):9,(4,229):9,(4,230):9,(4,231):9,(4,232):9,(4,233):9,(4,234):9,(4,235):9,(4,236):9,(4,237):9,(4,238):9,(4,239):9,(4,240):9,(4,241):9,
			(4,242):9,(4,243):9,(4,244):9,(4,245):9,(4,246):9,(4,247):9,(4,248):9,(4,249):9,(4,250):9,(4,251):9,(4,252):9,(4,253):9,(4,254):9,(4,255):9,(4,256):10,(4,257):10,(4,258):10,(4,259):10,(4,260):10,(4,261):10,
			(4,262):10,(4,263):10,(4,264):10,(4,265):10,(4,266):10,(4,267):10,(4,268):10,(4,269):10,(4,270):10,(4,271):10,(4,272):10,(4,273):10,(4,274):10,(4,275):10,(4,276):10,(4,277):10,(4,278):10,(4,279):10,(4,280):10,(4,281):10,
			(4,282):10,(4,283):10,(4,284):10,(4,285):10,(4,286):10,(4,287):10,(4,288):10,(4,289):10,(4,290):10,(4,291):10,(4,292):10,(4,293):10,(4,294):10,(4,295):10,(4,296):10,(4,297):10,(4,298):10,(4,300):10,(5,21):5,(5,22):5,
			(5,23):5,(5,24):5,(5,25):5,(5,26):5,(5,27):5,(5,28):5,(5,29):5,(5,30):5,(5,31):5,(5,32):6,(5,33):6,(5,34):6,(5,35):6,(5,36):6,(5,37):6,(5,38):6,(5,39):6,(5,40):6,(5,41):6,(5,42):6,
			(5,43):6,(5,44):6,(5,45):6,(5,46):6,(5,47):6,(5,48):6,(5,49):6,(5,50):6,(5,51):6,(5,52):6,(5,53):6,(5,54):6,(5,55):6,(5,56):6,(5,57):6,(5,58):6,(5,59):6,(5,60):6,(5,61):6,(5,62):6,
			(5,63):7,(5,64):7,(5,65):7,(5,66):7,(5,67):7,(5,68):7,(5,69):7,(5,70):7,(5,71):7,(5,72):7,(5,73):7,(5,74):7,(5,75):7,(5,76):7,(5,77):7,(5,78):7,(5,79):7,(5,80):7,(5,81):7,(5,82):7,
			(5,83):7,(5,84):7,(5,85):7,(5,86):7,(5,87):7,(5,88):7,(5,89):7,(5,90):7,(5,100):7,(5,1023):11,(6,21):5,(6,22):5,(6,23):5,(6,24):5,(6,25):5,(6,26):5,(6,27):5,(6,28):5,(6,29):5,(6,30):5,
			(6,31):5,(6,32):6,(6,33):6,(6,34):6,(6,35):6,(6,36):6,(6,37):6,(6,38):6,(6,39):6,(6,40):6,(6,41):6,(6,42):6,(6,43):6,(6,44):6,(6,45):6,(6,46):6,(6,47):6,(6,48):6,(6,49):6,(6,50):6,
			(6,51):6,(6,52):6,(6,53):6,(6,54):6,(6,55):6,(6,56):6,(6,57):6,(6,58):6,(6,59):6,(6,60):6,(6,61):6,(6,62):6,(6,63):6,(6,64):7,(6,65):7,(6,66):7,(6,67):7,(6,68):7,(6,69):7,(6,70):7,
			(6,71):7,(6,72):7,(6,73):7,(6,74):7,(6,75):7,(6,76):7,(6,77):7,(6,78):7,(6,79):7,(6,80):7,(6,81):7,(6,82):7,(6,83):7,(6,84):7,(6,85):7,(6,86):7,(6,87):7,(6,88):7,(6,89):7,(6,90):7,
			(6,91):7,(6,92):7,(6,2500):12,(7,21):5,(7,22):5,(7,23):5,(7,24):5,(7,25):5,(7,26):5,(7,27):5,(7,28):5,(7,29):5,(7,30):5,(7,31):5,(7,32):6,(7,33):6,(7,34):6,(7,35):6,(7,36):6,(7,37):6,
			(7,38):6,(7,39):6,(7,40):6,(7,41):6,(7,42):6,(7,43):6,(7,44):6,(7,45):6,(7,46):6,(7,47):6,(7,48):6,(7,49):6,(7,50):6,(7,51):6,(7,52):6,(7,53):6,(7,54):6,(7,55):6,(7,56):6,(7,57):6,
			(7,58):6,(7,59):6,(7,60):6,(7,61):6,(7,62):6,(7,63):6,(7,64):7,(7,65):7,(7,66):7,(7,67):7,(7,68):7,(7,69):7,(7,70):7,(7,71):7,(7,72):7,(7,73):7,(7,74):7,(7,75):7,(7,76):7,(7,77):7,
			(7,78):7,(7,79):7,(7,80):7,(7,81):7,(7,82):7,(7,83):7,(7,84):7,(7,85):7,(7,86):7,(7,87):7,(7,88):7,(7,89):7,(7,90):7,(7,91):7,(7,92):7,(7,93):7,(7,94):7,(7,16000):15,(8,21):5,(8,22):5,
			(8,23):5,(8,24):5,(8,25):5,(8,26):5,(8,27):5,(8,28):5,(8,29):5,(8,30):5,(8,31):5,(8,32):6,(8,33):6,(8,34):6,(8,35):6,(8,36):6,(8,37):6,(8,38):6,(8,39):6,(8,40):6,(8,41):6,(8,42):6,
			(8,43):6,(8,44):6,(8,45):6,(8,46):6,(8,47):6,(8,48):6,(8,49):6,(8,50):6,(8,51):6,(8,52):6,(8,53):6,(8,54):6,(8,55):6,(8,56):6,(8,57):6,(8,58):6,(8,59):6,(8,60):6,(8,61):6,(8,62):6,
			(8,63):6,(8,64):7,(8,65):7,(8,66):7,(8,67):7,(8,68):7,(8,69):7,(8,70):7,(8,71):7,(8,72):7,(8,73):7,(8,74):7,(8,75):7,(8,76):7,(8,77):7,(8,78):7,(8,79):7,(8,80):7,(8,81):7,(8,82):7,
			(8,83):7,(8,84):7,(8,85):7,(8,86):7,(8,87):7,(8,88):7,(8,89):7,(8,90):7,(8,91):7,(8,92):7,(8,93):7,(8,94):7,(8,95):7,(8,96):7,(8,7000):13,(9,21):5,(9,22):5,(9,23):5,(9,24):5,(9,25):5,
			(9,26):5,(9,27):5,(9,28):5,(9,29):5,(9,30):5,(9,31):5,(9,32):6,(9,33):6,(9,34):6,(9,35):6,(9,36):6,(9,37):6,(9,38):6,(9,39):6,(9,40):6,(9,41):6,(9,42):6,(9,43):6,(9,44):6,(9,45):6,
			(9,46):6,(9,47):6,(9,48):6,(9,49):6,(9,50):6,(9,51):6,(9,52):6,(9,53):6,(9,54):6,(9,55):6,(9,56):6,(9,57):6,(9,58):6,(9,59):6,(9,60):6,(9,61):6,(9,62):6,(9,63):6,(9,64):7,(9,65):7,
			(9,66):7,(9,67):7,(9,68):7,(9,69):7,(9,70):7,(9,71):7,(9,72):7,(9,73):7,(9,74):7,(9,75):7,(9,76):7,(9,77):7,(9,78):7,(9,79):7,(9,80):7,(9,81):7,(9,82):7,(9,83):7,(9,84):7,(9,85):7,
			(9,86):7,(9,87):7,(9,88):7,(9,89):7,(9,90):7,(9,91):7,(9,92):7,(9,93):7,(9,94):7,(9,95):7,(9,96):7,(9,97):7,(9,98):7,(9,1000):10,(10,21):5,(10,22):5,(10,23):5,(10,24):5,(10,25):5,(10,26):5,
			(10,27):5,(10,28):5,(10,29):5,(10,30):5,(10,31):5,(10,32):6,(10,33):6,(10,34):6,(10,35):6,(10,36):6,(10,37):6,(10,38):6,(10,39):6,(10,40):6,(10,41):6,(10,42):6,(10,43):6,(10,44):6,(10,45):6,(10,46):6,
			(10,47):6,(10,48):6,(10,49):6,(10,50):6,(10,51):6,(10,52):6,(10,53):6,(10,54):6,(10,55):6,(10,56):6,(10,57):6,(10,58):6,(10,59):6,(10,60):6,(10,61):6,(10,62):6,(10,63):6,(10,64):7,(10,65):7,(10,66):7,
			(10,67):7,(10,68):7,(10,69):7,(10,70):7,(10,71):7,(10,72):7,(10,73):7,(10,74):7,(10,75):7,(10,76):7,(10,77):7,(10,78):7,(10,79):7,(10,80):7,(10,81):7,(10,82):7,(10,83):7,(10,84):7,(10,85):7,(10,86):7,
			(3,20):5,(6,3):2,(2,196):20,(3,165):10,(4,61):7,(8,56):6,(7,32):6,(2,119):15,(4,204):9,(9,31):5,(3,29):6,(8,80):7
		}
	def __call__(self, *args):
		if args in self.cache:
			return self.cache[args]
		else:
			value = self.func(*args)
			self.cache[args] = value
			return value

@memoized
def egg_drop(num_eggs, num_floors):
	if num_floors < 3:
		return num_floors
	elif num_eggs == 1:
		return num_floors
	elif num_eggs == 2:
		i = 1
		while (i*i + i)/2 < num_floors:
			i += 1
		return i
	else:
		return 1 + min([max(egg_drop(num_eggs-1, i-1), egg_drop(num_eggs, num_floors-i)) for i in xrange(2, num_floors)])


# # Iterative version - doesn't blow the stack, but takes a long time for large input...
# def egg_drop(num_eggs, num_floors):
# 	cache = [[0]*(num_floors+1) for x in xrange(num_eggs+1)]
# 	for i in xrange(1, num_eggs+1):
# 		cache[i][1] = 1
# 	for j in xrange(1, num_floors+1):
# 		cache[1][j] = j
# 	for i in xrange(2, num_eggs+1):
# 		for j in xrange(2, num_floors+1):
# 			cache[i][j] = 100000
# 			for x in xrange(1, j+1):
# 				c = 1 + max(cache[i-1][x-1], cache[i][j-x])
# 				if c < cache[i][j]:
# 					cache[i][j] = c
# 	return cache[num_eggs][num_floors]

def main(args):
	if len(args) != 2:
		print 'Usage ~$ ' + args[0] + ' <input file>'
		sys.exit(0)
	else:
		filename = args[1]
	
	with open(filename, 'r') as f:
		for line in f:
			eggs, floors = [int(x) for x in line.strip().split()]
			print egg_drop(eggs, floors)


if __name__ == "__main__":
	main(sys.argv)
